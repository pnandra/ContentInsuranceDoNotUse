@model IEnumerable<ContentInsuranceMVC.Models.InsuredItem>

@{
    ViewData["Title"] = "Content Insured Items";
    int total = 0;
}

<h2>List of Insured Items</h2>

<table width="100%" style="border-style:none;"> @*border-style:none gets rid of the extra horizontal lines in the table.. nothing else works*@

        @foreach (var cat in Model.GroupBy(c => c.Category))
        {
            @if (cat.Sum(x => x.Value) > 0) //only show categories who have sum greater than zero
            {
            <tr>                
                <td>
                    <div class="d-inline p-2 bg-info text-white">
                        <table width="100%">
                            <tr>
                                <td width="90%">@cat.Key.Name</td>
                                <td width="10%" align="right">$@cat.Sum(x => x.Value).ToString("#,###")</td>
                            </tr>
                        </table>
                    </div>                    
                </td>                   
            </tr>
            <tr>
                <td>
                    @foreach (var item in cat)
                    {
                        @if (item.Value > 0) // only display items who have value greater than zero
                        {
                            <table width="100%" class="table table-hover table-borderless">
                                <tr>
                                    <td width="10%">&nbsp;</td>
                                    <td width="60%">@item.Name</td>
                                    <td width="25%" align="right">$@item.Value.ToString("#,###") </td>
                                    <td width="5%"><a asp-action="Delete" asp-route-id="@item.Id" class="btn-link">Delete</a></td>
                                </tr>
                            </table>
                        }
                        total = total + item.Value; // keep the running total
                    }
                </td>
            </tr>
            }
        }
    <tr>
        <td>
            <div class="d-inline p-2 bg-primary text-capitalize "> @*display the final total*@
                <table width="100%">
                    <tr>
                        <td width="90%"><strong>TOTAL</strong></td>
                        <td width="10%" align="right"><strong>$@total.ToString("#,###")</strong></td>
                    </tr>
                </table>
            </div>
        </td>        
    </tr>

 </table>
<br />
<br />
<div class="form-inline">
    <partial>
        @{await Html.RenderPartialAsync("_Create", Model.FirstOrDefault());}
    </partial>
</div>
    
